<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proxy on 东海一叶</title>
    <link>https://blog.yuanbin.me/tags/proxy/</link>
    <description>Recent content in Proxy on 东海一叶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 10 Jul 2016 16:38:19 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yuanbin.me/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>家用服务器之 Squid 分流</title>
      <link>https://blog.yuanbin.me/posts/2016-07/2016-07-10_16-38-19/</link>
      <pubDate>Sun, 10 Jul 2016 16:38:19 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2016-07/2016-07-10_16-38-19/</guid>
      <description>直接使用 v2xxx 的分流规则即可，比 squid 这种更简单 由于大家都知道的原因，大多数 ISP 的国外带宽往往不太理想，据说这个可以用 kcp 突破，我暂时没有国外带宽的困扰</description>
    </item>
    
    <item>
      <title>Transparent routing for home server in China</title>
      <link>https://blog.yuanbin.me/posts/2016-07/2016-07-10_10-19-55/</link>
      <pubDate>Sun, 10 Jul 2016 10:19:55 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2016-07/2016-07-10_10-19-55/</guid>
      <description>Since this post is sensitive in China, I will roll it with English instead.
ChinaDNS and WiFi(AP) From DNS Server for home server, we have set up with ChinaDNS and can resolv the external websites correctly. You can see a file including China IP in /etc/chnroute.txt. This file is very important for ss-rules. In Access Points for home server, we have built a AP and can assign the clients with DHCP and Unbound DNS Server backend.</description>
    </item>
    
    <item>
      <title>上海交大校外代理初体验</title>
      <link>https://blog.yuanbin.me/posts/2013-08/2013-08-19_10-56-30/</link>
      <pubDate>Mon, 19 Aug 2013 10:56:30 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2013-08/2013-08-19_10-56-30/</guid>
      <description>&lt;p&gt;最近忙着熟悉导师的研究方向和OPNET网络仿真工具，做毕设翻译那会找导师要过几篇英文文献，认真翻译了 Enable Pervasive Healthcare through Continuous Remote Health Monitoring 一文，论文前半部分概述了远程医疗监控(RHM)的体系架构，后半部分介绍了ViiCare产品提供的解决方案。概述性的东西毕竟只是起个引导作用，而且短短几页的论文也不可能会交待较多的细节。如果要结合OPNET来分析网络性能什么的显然是不知从何下手，于是乎习惯性的Google了一番，找到了一篇博士论文，正准备下载的时候&amp;hellip; 乖乖，现在已经不是校园网了哟，立马向西电的基友求助，短信刚发出去就想到了个令人激动的消息——隐约记得交大网络信息中心是提供校外访问的代理服务器的，那么？Google一下立马找到了&lt;a href=&#34;http://www.lib.sjtu.edu.cn/list.do?articleType_id=45&amp;amp;type=63&#34;&gt;这个链接&lt;/a&gt;，网页中提供了局域网和ADSL下的使用方法，都是针对IE的。说白了就是提供了代理服务器的地址和端口号，如果只是在浏览器中使用的话SwitchySharp/Foxyproxy插件新增个代理就好了，试了下速度很理想！&lt;/p&gt;

&lt;h2 id=&#34;代理服务器&#34;&gt;代理服务器&lt;/h2&gt;

&lt;p&gt;代理服务器名：inproxy.sjtu.edu.cn&lt;br /&gt;
端口号：8000 OR 80&lt;/p&gt;

&lt;p&gt;连通后会让输入jAccount帐号密码，这个新生已经可以申请了，perfect!&lt;/p&gt;

&lt;h3 id=&#34;全局代理&#34;&gt;全局代理&lt;/h3&gt;

&lt;p&gt;虽然大部分情况在浏览器中使用代理就足够了，但有时其他应用程序也许也需要代理访问，这个时候就稍微有点麻烦喽。
如果想要全局代理的话则需要模拟http认证，Windows下似乎有p-roxycap比较方便，Linux下暂时还没看到类似的软件，之前也没怎么需要用非浏览器应用中使用代理，这方面了解不太多。舍友yqt用Python写了个DXTL的全局代理，于是乎便借过来用了下，还不错，效果就是下边这个样子：&lt;br /&gt;
&lt;img src=&#34;http://7xojrx.com1.z0.glb.clouddn.com/images/misc/inproxy-sjtu.png&#34; alt=&#34;sjtu-inroxy&#34; /&gt;&lt;br /&gt;
需要使用时只需在Terminal下运行&lt;code&gt;python sjtu-inproxy.py&lt;/code&gt;即可，很方便。&lt;br /&gt;

上代码==&amp;gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>