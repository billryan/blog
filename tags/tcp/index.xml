<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP on 东海一叶</title>
    <link>https://blog.yuanbin.me/tags/tcp/</link>
    <description>Recent content in TCP on 东海一叶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Mar 2015 13:39:59 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yuanbin.me/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP协议浅析</title>
      <link>https://blog.yuanbin.me/posts/2015-03/2015-03-24_13-39-59/</link>
      <pubDate>Tue, 24 Mar 2015 13:39:59 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2015-03/2015-03-24_13-39-59/</guid>
      <description>&lt;p&gt;TCP为应用层提供的是全双工服务，也就是说数据能在发送方和接收方两个方向上独立地进行传输。&lt;/p&gt;

&lt;p&gt;在浅析TCP传输层协议之前先说说&lt;code&gt;segment&lt;/code&gt;, &lt;code&gt;datagram&lt;/code&gt;, &lt;code&gt;frame&lt;/code&gt;的区别。&lt;/p&gt;

&lt;p&gt;严格说来，以上三个名词均为专业性术语。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;message&lt;/code&gt; - 用于应用层&lt;/li&gt;
&lt;li&gt;&lt;code&gt;segment&lt;/code&gt; - TCP的PDU(Protocol Data Unit)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;datagram&lt;/code&gt; - UDP的PDU&lt;/li&gt;
&lt;li&gt;&lt;code&gt;packet&lt;/code&gt; - IP的PDU(RFC791中也称之为datagram)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;frame&lt;/code&gt; - 数据链路层的PDU&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;tcp-segment-structure&#34;&gt;TCP segment structure&lt;/h2&gt;

&lt;p&gt;TCP segment由TCP头部和TCP数据部分组成，首先来瞅瞅TCP头部的包结构。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xojrx.com1.z0.glb.clouddn.com/images/misc/tcp_header.png-q75&#34; alt=&#34;TCP头部包结构&#34; /&gt;&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;Source port (16 bits)&lt;/dt&gt;
&lt;dd&gt;16位源端口号(发送方使用)&lt;/dd&gt;
&lt;dt&gt;Destination port (16 bits)&lt;/dt&gt;
&lt;dd&gt;16位目的端口号(接收方使用)&lt;/dd&gt;
&lt;dt&gt;Sequence number (32 bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;32位序列号，有两个作用：&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;在&lt;code&gt;SYN&lt;/code&gt; flag 置1时，此为当前连接的初始序列号（initial sequence number, ISN），数据的第一个字节序号为此ISN+1&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;在&lt;code&gt;SYN&lt;/code&gt; flag 置0时，为当前连接报文段的累计数据包字节数。&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;Acknowledgment number (32 bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;32位确认序号，ACK flag置1时才有效，指接收方期待的下一个报文段的序列号。&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;Data offset (4 bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;指示TCP头部的32位元的数目。由于有Options域的存在，因此TCP头部最小为20字节，最大为(15*4 = 60)字节. 同时这个域也包含了TCP报文段实际数据的开始偏移量。&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;Reserved (3 bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;保留域&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;Flags (9 bits) (aka Control bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;控制域信息包含9个一位标志符(3个为新增)。&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;ACK - 确认域使用。在初始SYN包之后由客户端发送到报文段都必须包含此控制信息&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;RST - 重置连接&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;SYN - 同步序列号，一般仅在连接双方发送第一个包时使用&lt;/p&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;p&gt;FIN - 发送方不再发送数据&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;Window size (16 bits)&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;接收窗口的大小(默认以字节为单位)，期望接收到报文段多少，常用于流控。&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>