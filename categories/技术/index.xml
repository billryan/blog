<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 东海一叶</title>
    <link>https://blog.yuanbin.me/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 东海一叶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 13 Feb 2020 22:19:02 +0800</lastBuildDate>
    
	<atom:link href="https://blog.yuanbin.me/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mosh&#43;tmux = SSH 好帮手</title>
      <link>https://blog.yuanbin.me/posts/2020-02/2020-02-13_22-19-02/</link>
      <pubDate>Thu, 13 Feb 2020 22:19:02 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2020-02/2020-02-13_22-19-02/</guid>
      <description>今天写的是一篇工具类文章，专治各种 SSH 水土不服。在平时的科研或者后端开发过程中，我们总免不了要使用远端服务器来完成我们的工作，这里面会经常遇到</description>
    </item>
    
    <item>
      <title>Golang set 实现</title>
      <link>https://blog.yuanbin.me/posts/2020-02/2020-02-02_08-43-55/</link>
      <pubDate>Sun, 02 Feb 2020 08:43:56 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2020-02/2020-02-02_08-43-55/</guid>
      <description>熟悉 Java 的看到这种标题，下意识会觉得这篇文章可能是分析 Go 中 set 的实现细节，但我要告诉你的是，Go 官方并没有 set 这种东西，需要的话自己去实现吧&amp;he</description>
    </item>
    
    <item>
      <title>阿里云 EMR gateway 替代方案</title>
      <link>https://blog.yuanbin.me/posts/2019-03/2019-03-25_20-59-21/</link>
      <pubDate>Mon, 25 Mar 2019 20:59:21 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2019-03/2019-03-25_20-59-21/</guid>
      <description>本文主要分享小规模开发测试环境下阿里云 EMR gateway 节点的替代方案，同时也为想寻找同时支持 HTTP proxy 和 websocket 的代理工具提供一些思路。传统的 HTTP proxy 有 Squid, 但是 Squid 对 HTTPS, HTTP/2 和</description>
    </item>
    
    <item>
      <title>信息流推荐和搜索的实时数据流架构</title>
      <link>https://blog.yuanbin.me/posts/2019-03/2019-03-19_23-33-51/</link>
      <pubDate>Tue, 19 Mar 2019 23:33:51 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2019-03/2019-03-19_23-33-51/</guid>
      <description>本文主要介绍了自己近两个月重构产品推荐引擎后端的实时数据流同步架构，抛弃了之前的 Spark Streaming, 选择了基于 Kafka Stream 以及 Kafka Connect 做一些轻量级的实时 ETL. 数据流同步架构</description>
    </item>
    
    <item>
      <title>JVM 在 Docker 等容器环境下的资源限制问题</title>
      <link>https://blog.yuanbin.me/posts/2019-03/2019-03-18_23-30-06/</link>
      <pubDate>Mon, 18 Mar 2019 23:30:06 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2019-03/2019-03-18_23-30-06/</guid>
      <description>堆内存设置 Java 程序中，我们通常比较关注堆的使用情况，一般通过 -Xmx 和 -Xms 分别控制最大和最小可用堆内存大小。在容器环境中，如果不显式指定堆内存参数，老</description>
    </item>
    
    <item>
      <title>神策 Kafka 0.8.2 Mirror Maker 优化</title>
      <link>https://blog.yuanbin.me/posts/2019-03/2019-03-14_09-47-39/</link>
      <pubDate>Thu, 14 Mar 2019 09:47:40 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2019-03/2019-03-14_09-47-39/</guid>
      <description>由于历史原因，我们采购的神策所用的 Kafka 是老版本 0.8.2, 其所有的项目均在同一 topic 中，所以在构建我们的实时数据管道的过程中，我们需要对原有神策 Kafka 做如下两点</description>
    </item>
    
    <item>
      <title>为 Hugo even 主题移植 comment.js 评论插件</title>
      <link>https://blog.yuanbin.me/posts/2018-08/2018-08-19_16-59-31/</link>
      <pubDate>Sun, 19 Aug 2018 16:59:31 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-08/2018-08-19_16-59-31/</guid>
      <description>在前文 博客写作工作流 中我提到过一些关于博客评论系统的选择，简单来说就是弃用了 disqus, 选择了基于 GitHub issue 的评论方案，而由于 GitHub 之前 OAuth 鉴权粒度不够细，基于 gitalk/gitcoment</description>
    </item>
    
    <item>
      <title>基于大数据平台的客户像系统设计</title>
      <link>https://blog.yuanbin.me/posts/2018-08/2018-08-02_23-59-46/</link>
      <pubDate>Thu, 02 Aug 2018 23:59:46 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-08/2018-08-02_23-59-46/</guid>
      <description>客户画像系统在不同公司有不同的业务场景需求，但总的目标基本都是由于客户越来越多，我们需要对海量的客户信息进行降维，进而更好的理解客户和精准推</description>
    </item>
    
    <item>
      <title>HAProxy 进阶使用技巧</title>
      <link>https://blog.yuanbin.me/posts/2018-06/2018-06-30_21-26-14/</link>
      <pubDate>Sat, 30 Jun 2018 21:26:14 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-06/2018-06-30_21-26-14/</guid>
      <description>本文主要记录了一些在特殊网络下使用 HAProxy 的一些进阶使用技巧，如网络上层应用 Health Check 的精准检测(HA)和负载均衡。本期主要介绍 Health Check 在 proxy 中的使用细节。 Health</description>
    </item>
    
    <item>
      <title>Hue hive metastore 显示时间差的问题</title>
      <link>https://blog.yuanbin.me/posts/2018-04/2018-04-20_17-24-14/</link>
      <pubDate>Fri, 20 Apr 2018 17:24:14 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-04/2018-04-20_17-24-14/</guid>
      <description>Hue 中通过 Hive metastore 查看表创建信息时，我们发现其中 Overview 和 Details 的时间差总是6个小时，按理北京时间东八区相差8个小时才合理啊，接下来我们跟一下 Hue 中的代码。 从</description>
    </item>
    
    <item>
      <title>Hive show create table 显示空白行的问题</title>
      <link>https://blog.yuanbin.me/posts/2018-04/2018-04-02_16-35-55/</link>
      <pubDate>Mon, 02 Apr 2018 16:35:55 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-04/2018-04-02_16-35-55/</guid>
      <description>对于分析人员来说，由于业务复杂，免不了会需要创建一些视图进行查询，然鹅，有时为了搞清楚视图牵涉到的表及业务关系，总免不了要去查看视图的创建细</description>
    </item>
    
    <item>
      <title>身份证解析的那些小事</title>
      <link>https://blog.yuanbin.me/posts/2018-03/2018-03-28_23-50-56/</link>
      <pubDate>Wed, 28 Mar 2018 23:50:56 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-03/2018-03-28_23-50-56/</guid>
      <description>说起身份证这个东西，可以吐槽的点实在是太多了，曾经开发 X 项目时需要充分利用身份证信息，如籍贯、年龄、性别、生肖和星座等。除籍贯外其它信息都可</description>
    </item>
    
    <item>
      <title>Spark 开发之环境准备</title>
      <link>https://blog.yuanbin.me/posts/2018-03/2018-03-19_11-17-37/</link>
      <pubDate>Mon, 19 Mar 2018 11:17:37 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-03/2018-03-19_11-17-37/</guid>
      <description>JVM 是必须的，所以需要 Java(JDK 1.8+), 想写 Python 的还需要 Python(2.7.x/3.x). 快速试用或简单尝试的，可以考虑 databrick cloud 或者本地安装 spark-notebook/spark-notebook 可以在浏览器中写 Scala 代码体验一些 Spark 和 Scala 的特性。 对于 Spark 的</description>
    </item>
    
    <item>
      <title>Python 网页爬虫入门——信息抓取</title>
      <link>https://blog.yuanbin.me/posts/2018-03/2018-03-15_13-44-59/</link>
      <pubDate>Thu, 15 Mar 2018 13:44:59 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-03/2018-03-15_13-44-59/</guid>
      <description>之所以需要写网页爬虫，无非是因为无法直接读取对方数据库，需要借助于网页将需要的文字和图片等信息抓取下来。不管使用什么样的工具，我们最终都需要</description>
    </item>
    
    <item>
      <title>Scala/Java 多环境配置管理——使用 Typesafe Config</title>
      <link>https://blog.yuanbin.me/posts/2018-02/2018-02-28_23-48-31/</link>
      <pubDate>Wed, 28 Feb 2018 23:48:31 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-02/2018-02-28_23-48-31/</guid>
      <description>在前文 Python 多环境配置类 中提过可以使用类继承的方式管理开发、测试和生产环境的配置，简洁优雅。相较于动态语言 Python 而言，Scala/Java 使用同样的</description>
    </item>
    
    <item>
      <title>Python 多环境配置管理</title>
      <link>https://blog.yuanbin.me/posts/2018-02/2018-02-24_16-30-16/</link>
      <pubDate>Sat, 24 Feb 2018 16:30:16 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-02/2018-02-24_16-30-16/</guid>
      <description>实际工程开发中常常会对开发、测试和生产等不同环境配置不同的数据库环境，传统方式可以通过添加不同环境的配置文件达到部署时的动态切换的效果。这种</description>
    </item>
    
    <item>
      <title>博客写作工作流</title>
      <link>https://blog.yuanbin.me/posts/2018-02/2018-02-23_23-19-29/</link>
      <pubDate>Fri, 23 Feb 2018 23:19:29 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2018-02/2018-02-23_23-19-29/</guid>
      <description>平台/工具折腾血泪史 博客陆陆续续也写了有七八年了，早年在51空间、QQ 空间、人人网、点点网上写过一些矫情的文字，后来接触了比较 geek 的 GitHub Pages 方式，</description>
    </item>
    
    <item>
      <title>GitBook 插件介绍及定制</title>
      <link>https://blog.yuanbin.me/posts/2016-11/2016-11-07_10-48-42/</link>
      <pubDate>Mon, 07 Nov 2016 10:48:42 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2016-11/2016-11-07_10-48-42/</guid>
      <description>在 使用 GitBook 制作高质量电子书 一文中我简要描述了 GitBook 的基本功能和使用，适用于 GitBook 的所有插件均可以从 Plugins for GitBook 中找到，下文将介绍一些适用于 GitBook 的实用插件及定制</description>
    </item>
    
    <item>
      <title>使用 GitBook 制作高质量电子书</title>
      <link>https://blog.yuanbin.me/posts/2016-10/2016-10-09_21-48-24/</link>
      <pubDate>Sun, 09 Oct 2016 21:48:24 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2016-10/2016-10-09_21-48-24/</guid>
      <description>&lt;p&gt;作为知识型工作者，时常会遇到的一个问题是如何将自己所做的工作精心汇总并便利地展示给广大读者。从阅读、传播和互动的角度来看，制作一个专业的网站可能是较为理想的方案，但实际操作起来可能会因为各种各样的技术问题而让人望而却步。&lt;a href=&#34;https://www.gitbook.com&#34;&gt;GitBook&lt;/a&gt; 的出现算是解决了用户的绝大部分痛点。与 GitHub Pages 仅作为静态页面展示平台不同，GitBook 在文本编辑、多人协作、互动和电子书最终输出形式等方面的支持非常完善，基本上涵盖了现代出版物的整个生命周期，接下来的篇幅将详述这几个环节并介绍一些自己的实践经验。GitBook 的官方文档见 &lt;a href=&#34;https://toolchain.gitbook.com/&#34;&gt;GitBook Toolchain Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yuanbin.me/pictures/misc/gitbook-part1-site.png&#34; alt=&#34;GitBook website&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;-web&#34;&gt;客户端或 Web&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yuanbin.me/pictures/misc/gitbook-part1-editor.png&#34; alt=&#34;GitBook editor&#34;&gt;&lt;/p&gt;
&lt;p&gt;相比于 GitHub Pages 高门槛的写作方式，GitBook 在这方面则显得亲民的多（和 Word Office 之类的软件易用程度相当），由于是基于 Node.js 的应用，其不仅提供跨平台的图形化写作软件，同时也提供了 Web 版在线编辑，两者在功能上无异。虽然 GitBook 同时支持 Markdown 和 AsciiDoc, 但可以明显感受到其对 Markdown 格式的偏爱，不熟悉 Markdown 的朋友们也不用担心，GitBook 的工具栏中提供了各种常用格式的快捷方式。Markdown 相比 LaTeX 来说要简单地多，需要记的格式最多也只有十来种，基本上是那种一看就会用的极简格式，详细的格式支持和使用见 &lt;a href=&#34;https://toolchain.gitbook.com/syntax/markdown.html&#34;&gt;Markdown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.yuanbin.me/pictures/misc/gitbook-part1-template.png&#34; alt=&#34;GitBook template&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 GitBook 网站新建电子书时可从默认的三种模板 (书籍或手册/API 文档/知识库 FAQ) 选择一个，官方虽然只提供了三种模板，但由于 GitBook 的可定制性极强，已经有不少第三方的模板可选了。除新建外你也可以从已有的 docs/odt/html/GitHub 等地方导入，从第三方导入的格式往往和 GitBook 家的稍微有那么点不一样，可能需要微调。&lt;/p&gt;
&lt;h3 id=&#34;-github-repo&#34;&gt;绑定 GitHub repo&lt;/h3&gt;
&lt;p&gt;除了使用客户端和 Web 编辑文本这种简易模式外，你也可以挑战一下 Hard 模式如通过绑定 GitHub repo 推送更新，需要注意的是绑定到 GitHub repo 后当前电子书不可再从客户端或者 Web 上更新，这大概是 git 的锅了吧 :( 使用 GitHub 绑定的电子书在添加新文件时容易忘记更新目录文件 &lt;code&gt;SUMMARY.md&lt;/code&gt;，在此特意提醒下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>自制 GitBook 插件之 gitbook-plugin-tags</title>
      <link>https://blog.yuanbin.me/posts/2016-09/2016-09-18_22-55-14/</link>
      <pubDate>Sun, 18 Sep 2016 22:55:14 +0800</pubDate>
      
      <guid>https://blog.yuanbin.me/posts/2016-09/2016-09-18_22-55-14/</guid>
      <description>最开始使用 GitBook 撰写电子书是从去年开始维护的 billryan/algorithm-exercise 算法文档开始的，因为这个项目我已经造了不少轮子，给 GitBook 添加类似博客中的 category/tag 功能的插件在下班后的周末抽空</description>
    </item>
    
  </channel>
</rss>